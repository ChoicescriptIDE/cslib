*label entry
*params module log_buffer
*temp test_count 0
*temp tests_passed 0


*comment :::::: MEAN tests ::::::
*gosub test_start "MEAN #1"
*temp result_expected 3
*gosub_scene cslib_number mean 1 2 3 4 5
*gosub test_finish result_expected cslib_ret


*comment :::::: MAX tests ::::::
*gosub test_start "MAX #1"
*temp result_expected 66
*gosub_scene cslib_number max 1 32 17 66
*gosub test_finish result_expected cslib_ret


*comment :::::: MIN tests ::::::
*gosub test_start "MIN #1"
*temp result_expected 17
*gosub_scene cslib_number min 123 32 17 66
*gosub test_finish result_expected cslib_ret


*comment :::::: MAX_STAT tests ::::::
*gosub test_start "MAX_STAT #1"
*set test_stat_strength 100
*set test_stat_charisma 50
*set test_stat_wisdom 10
*temp result_expected "test_stat_strength"
*gosub_scene cslib_number max_stat "test_stat_strength" "test_stat_charisma" "test_stat_wisdom"
*gosub test_finish result_expected cslib_ret


*comment :::::: MIN_STAT tests ::::::
*gosub test_start "MIN_STAT #1"
*temp result_expected "test_stat_wisdom"
*gosub_scene cslib_number min_stat "test_stat_strength" "test_stat_charisma" "test_stat_wisdom"
*gosub test_finish result_expected cslib_ret


*comment :::::: IS_NUMBER tests ::::::
*gosub test_start "IS_NUMBER #1"
*temp result_expected true
*gosub_scene cslib_number is_number "1234567890"
*gosub test_finish result_expected cslib_ret

*gosub test_start "IS_NUMBER #2 (neg)"
*temp result_expected false
*gosub_scene cslib_number is_number "123fourfive"
*gosub test_finish result_expected cslib_ret


*comment :::::: ARE_NUMBERS tests ::::::
*gosub test_start "ARE_NUMBERS #1"
*temp result_expected true
*gosub_scene cslib_number are_numbers "12345" "6789"
*gosub test_finish result_expected cslib_ret

*gosub test_start "ARE_NUMBERS #2 (neg)"
*temp result_expected false
*gosub_scene cslib_number are_numbers "12345" "onetwothree"
*gosub test_finish result_expected cslib_ret


*set cslib_ret "${tests_passed}|${test_count}"
*return

*comment :::::: UTILITY routines ::::::
*label test_start
*params p_test_name
*set test_count + 1
*set {log_buffer} &"TEST ${p_test_name}: "
*return

*label test_finish
*params p_result_expected p_result_actual
*temp result (p_result_expected = p_result_actual)
*set {log_buffer} &"@{result PASS|FAIL}[n/]"
*if result
	*set tests_passed + 1
*else
	*set {log_buffer} &"=> Expected - ${p_result_expected}[n/]"
	*set {log_buffer} &"=> Received - ${p_result_actual}[n/]"
*return