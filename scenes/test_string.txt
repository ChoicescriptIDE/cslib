*label entry
*params module log_buffer
*temp test_count 0
*temp tests_passed 0


*comment :::::: CONCAT tests ::::::
*gosub test_start "concat 1"
*temp result_expected "Real John Doe"
*gosub_scene cslib_string concat " " "Real" "John" "Doe"
*gosub test_finish result_expected cslib_ret

*gosub test_start "concat 2"
*temp result_expected "full_name"
*gosub_scene cslib_string concat "_" "full" "name"
*gosub test_finish result_expected cslib_ret


*comment :::::: SUBSTRING tests ::::::
*gosub test_start "SUBSTRING #1"
*temp result_expected "super"
*gosub_scene cslib_string substring "superman" 1 5
*gosub test_finish result_expected cslib_ret

*gosub test_start "SUBSTRING #2"
*temp result_expected "_"
*gosub_scene cslib_string substring "hello_world" 6 6
*gosub test_finish result_expected cslib_ret

*gosub test_start "SUBSTRING #3 (one char string)"
*temp result_expected "E"
*gosub_scene cslib_string substring "E" 1 1
*gosub test_finish result_expected cslib_ret


*comment :::::: FIND tests ::::::
*gosub test_start "FIND #1"
*temp result_expected 7
*gosub_scene cslib_string find "Hello World!" "World"
*gosub test_finish result_expected cslib_ret


*comment :::::: REPLACE tests ::::::
*gosub test_start "REPLACE #1"
*temp result_expected "abc_abc_abc_abc_abc"
*gosub_scene cslib_string replace "abc_bca_abc_bca_abc" "bca" "abc"
*gosub test_finish result_expected cslib_ret

*gosub test_start "REPLACE #2"
*temp result_expected "LE SP3AK 15 BAD"
*gosub_scene cslib_string replace "L337 SP34K 15 B4D" "337" "E"
*gosub_scene cslib_string replace cslib_ret "4" "A"
*gosub_scene cslib_string replace cslib_ret "7" "T"
*gosub test_finish result_expected cslib_ret

*gosub test_start "REPLACE #3 (sequential)"
*temp result_expected "LEET SPEAK 1S BAD"
*gosub_scene cslib_string replace "L337 SP34K 15 B4D" "3" "E"
*gosub_scene cslib_string replace cslib_ret "4" "A"
*gosub_scene cslib_string replace cslib_ret "7" "T"
*gosub_scene cslib_string replace cslib_ret "5" "S"
*gosub test_finish result_expected cslib_ret


*comment :::::: INDEX tests ::::::
*gosub test_start "INDEX #1"
*temp result_expected 3
*gosub_scene cslib_string index "ABCDEF" "C"
*gosub test_finish result_expected cslib_ret

*gosub test_start "INDEX #2"
*set cslib_catch_bug true
*temp result_expected "Bug: p_char should be a single character, not \"\""
*gosub_scene cslib_string index "ABCDEF" ""
*set cslib_catch_bug false
*gosub test_finish result_expected cslib_bug_message


*comment :::::: LOWERCASE tests ::::::
*gosub test_start "LOWERCASE #1"
*temp result_expected "lowercase"
*gosub_scene cslib_string lowercase "LOWERCASE"
*gosub test_finish result_expected cslib_ret

*gosub test_start "LOWERCASE #2 (spaces)"
*temp result_expected "lowercase with spaces"
*gosub_scene cslib_string lowercase "LOWERCASE with SPACES"
*gosub test_finish result_expected cslib_ret


*comment :::::: REVERSE tests ::::::
*gosub test_start "REVERSE #1"
*temp result_expected "!dlroW olleH"
*gosub_scene cslib_string reverse "Hello World!"
*gosub test_finish result_expected cslib_ret


*comment :::::: CONTAINS tests ::::::
*gosub test_start "CONTAINS #1 (numbers)"
*temp result_expected true
*gosub_scene cslib_string contains "My n4m3 is" "123456789"
*gosub test_finish result_expected cslib_ret

*gosub test_start "CONTAINS #2 (spaces)"
*temp result_expected true
*gosub_scene cslib_string contains "Shouldn't have spaces" " "
*gosub test_finish result_expected cslib_ret

*gosub test_start "CONTAINS #3 (neg)"
*temp result_expected false
*gosub_scene cslib_string contains "Hello World!" "2345txy"
*gosub test_finish result_expected cslib_ret

*gosub test_start "CONTAINS #4 (single)"
*temp result_expected true
*gosub_scene cslib_string contains "!" "@!$%^"
*gosub test_finish result_expected cslib_ret


*comment :::::: CONSISTS_OF tests ::::::
*gosub test_start "CONSISTS_OF #1 (numbers)"
*gosub_scene cslib_string consists_of "14756598573756237350" "0123456789"
*temp result_expected true
*gosub test_finish result_expected cslib_ret

*gosub test_start "CONSISTS_OF #2 (spaces)"
*gosub_scene cslib_string consists_of "       " " "
*temp result_expected true
*gosub test_finish result_expected cslib_ret

*gosub test_start "CONSISTS_OF #3 (neg)"
*gosub_scene cslib_string consists_of "       cslib" " "
*temp result_expected false
*gosub test_finish result_expected cslib_ret

*gosub test_start "CONSISTS_OF #1 (single)"
*gosub_scene cslib_string consists_of "!" "@!$%^"
*temp result_expected true
*gosub test_finish result_expected cslib_ret


*comment :::::: EXTRACT TOKEN tests ::::::
*comment *gosub test_start "EXTRACT_TOKEN #1"
*comment *temp result_expected "VAL=TRUE"
*comment *set str_buffer "VAL=TRUE|VAL=FALSE|VAL=TRUE"
*comment *gosub_scene cslib_string extract_token "str_buffer" "|"
*comment *gosub test_finish result_expected cslib_ret

*comment *gosub test_start "EXTRACT_TOKEN #2"
*comment *temp result_expected "VAL=FALSE|VAL=TRUE"
*comment *set str_buffer "VAL=TRUE|VAL=FALSE|VAL=TRUE"
*comment *gosub_scene cslib_string extract_token "str_buffer" "|"
*comment *gosub test_finish result_expected str_buffer

*comment *gosub test_start "EXTRACT_TOKEN #3"
*comment *temp result_expected "VAL=TRUE, VAL=FALSE, VAL=TRUE"
*comment *temp result_actual ""
*comment *set str_buffer "VAL=TRUE|VAL=FALSE|VAL=TRUE"
*comment *label test_extact_token_3_loop
*comment *gosub_scene cslib_string extract_token "str_buffer" "|"
*comment *if cslib_ret != ""
	*comment *set result_actual &("@{(result_actual = \"\") |, }${cslib_ret}")
	*comment *goto test_extact_token_3_loop
*comment *gosub test_finish result_expected result_actual


*set cslib_ret "${tests_passed}|${test_count}"
*return


*comment :::::: UTILITY routines ::::::
*label test_start
*params p_test_name
*set test_count + 1
*set {log_buffer} &"TEST ${p_test_name}: "
*return

*label test_finish
*params p_result_expected p_result_actual
*temp result (p_result_expected = p_result_actual)
*set {log_buffer} &"@{result PASS|FAIL}[n/]"
*if result
	*set tests_passed + 1
*else
	*set {log_buffer} &"=> Expected - ${p_result_expected}[n/]"
	*set {log_buffer} &"=> Received - ${p_result_actual}[n/]"
*return